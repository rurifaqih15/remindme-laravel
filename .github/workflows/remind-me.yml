name: Laravel

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest
    env:
      DB_DATABASE: remind_me
      DB_USERNAME: root
      DB_HOST: 127.0.0.1
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
    services:
      mysql:
        image: mysql:8.1
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: remind_me
          MYSQL_ROOT_PASSWORD: root
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
 
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
    - uses: actions/checkout@v3
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
            php-version: '8.2'
            extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
            coverage: none
    - name: Start mysql service
      run: sudo /etc/init.d/mysql start
    - name: Check MySQL Status
      run: sudo service mysql status  
    - name: Verify MySQL connection
      run: |
        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uuser -ppassword -e "SHOW DATABASES"
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.ci', '.env');"
      working-directory: src
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

    - name: Run composer install
      run: |
        php --version
        composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
        chmod -R 777 storage bootstrap/cache
      working-directory: src

    - name: Generate key
      run: php artisan key:generate
      working-directory: src
      
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_DATABASE: remind_me
        DB_USERNAME: user
        DB_PASSWORD: password
      run: |
          php artisan config:clear
          php artisan config:cache
          php artisan migrate
          php artisan db:seed
          php artisan test
      working-directory: src
